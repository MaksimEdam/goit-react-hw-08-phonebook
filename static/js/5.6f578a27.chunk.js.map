{"version":3,"sources":["components/LoginForm/LoginForm.module.css","components/LoginForm/LoginForm.js","views/LoginPage.js"],"names":["module","exports","LoginForm","useState","email","password","user","setUser","dispatch","useDispatch","handleChange","useCallback","target","name","value","trim","handleSubmit","event","preventDefault","loginUser","onSubmit","autoComplete","className","s","form","TextField","variant","label","required","inputProps","type","onChange","input","Button","color","button","LoginPage"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,OAAS,4B,qICM5E,SAASC,IACtB,MAAwBC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,KAAxD,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAWC,cACXC,EAAeC,uBACnB,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACjBP,EAAQ,2BAAKD,GAAN,kBAAaO,EAAOC,EAAMC,YAEnC,CAACT,IAEGU,EAAeL,uBACnB,SAACM,GACCA,EAAMC,iBACNV,EAASW,YAAUb,IACnBC,EAAQ,CAAEH,MAAO,GAAIC,SAAU,OAEjC,CAACG,EAAUF,IAGb,OACE,uBAAMc,SAAUJ,EAAcK,aAAa,MAAMC,UAAWC,IAAEC,KAA9D,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAM,QACNC,UAAQ,EACRC,WAAY,CACVC,KAAM,QACNjB,KAAM,QACNC,MAAOR,EAAKF,MACZ2B,SAAUrB,GAEZY,UAAWC,IAAES,QAEf,cAACP,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAM,WACNC,UAAQ,EACRC,WAAY,CACVC,KAAM,WACNjB,KAAM,WACNC,MAAOR,EAAKD,SACZ0B,SAAUrB,GAEZY,UAAWC,IAAES,QAEf,cAACC,EAAA,EAAD,CACEP,QAAQ,YACRQ,MAAM,UACNJ,KAAK,SACLR,UAAWC,IAAEY,OAJf,sBCzCSC,UARG,WAChB,OACE,8BACE,cAAClC,EAAD","file":"static/js/5.6f578a27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2DTJ8\",\"input\":\"LoginForm_input__3ZwO-\",\"button\":\"LoginForm_button__4AsYz\"};","import React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loginUser } from \"../../redux/auth/auth-operations\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport s from \"./LoginForm.module.css\";\n\nexport default function LoginForm() {\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\n  const dispatch = useDispatch();\n  const handleChange = useCallback(\n    ({ target: { name, value } }) => {\n      setUser({ ...user, [name]: value.trim() });\n    },\n    [user]\n  );\n  const handleSubmit = useCallback(\n    (event) => {\n      event.preventDefault();\n      dispatch(loginUser(user));\n      setUser({ email: \"\", password: \"\" });\n    },\n    [dispatch, user]\n  );\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\" className={s.form}>\n      <TextField\n        variant=\"outlined\"\n        label=\"Email\"\n        required\n        inputProps={{\n          type: \"email\",\n          name: \"email\",\n          value: user.email,\n          onChange: handleChange,\n        }}\n        className={s.input}\n      />\n      <TextField\n        variant=\"outlined\"\n        label=\"Password\"\n        required\n        inputProps={{\n          type: \"password\",\n          name: \"password\",\n          value: user.password,\n          onChange: handleChange,\n        }}\n        className={s.input}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        className={s.button}\n      >\n        Login\n      </Button>\n    </form>\n  );\n}\n","import LoginForm from \"../components/LoginForm\";\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}