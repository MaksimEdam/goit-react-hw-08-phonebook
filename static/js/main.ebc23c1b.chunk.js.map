{"version":3,"sources":["redux/contacts/contacts-reducers.js","redux/auth/auth-reducers.js","redux/store.js","routes.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","components/App/App.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","redux/auth/auth-actions.js","components/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js"],"names":["items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","contact","id","logoutSuccess","updateContactSuccess","map","updateFilter","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","updateLoading","updateContactRequest","updateContactError","error","contactsReducer","combineReducers","initialUserState","name","email","user","registerSuccess","loginSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","getCurrentUserRequest","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","auth","persistReducer","devTools","process","persistor","persistStore","routes","home","register","login","getIsAuthenticated","getUserEmail","Navigation","useSelector","className","s","NavLinksList","exact","to","NavLink","activeClassName","StyledChip","withStyles","root","backgroundColor","color","Chip","UserMenu","dispatch","useDispatch","onLogout","useCallback","logoutUser","userEmail","avatar","Avatar","label","onClick","logoutbutton","AuthNav","AppBar","position","PrivateRoute","redirectTo","children","routeProps","PublicRoute","restricted","defaultProps","LoginPage","lazy","RegisterPage","ContactsPage","App","useEffect","getCurrentUser","basename","fallback","type","height","width","path","ReactDOM","render","StrictMode","document","getElementById","module","exports","axios","defaults","baseURL","authToken","headers","common","Authorization","registerUser","a","registerRequest","post","response","data","message","loginUser","loginRequest","logoutRequest","getState","get","createAction"],"mappings":"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","file":"static/js/main.ebc23c1b.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  updateFilter,\n  updateContactRequest,\n  updateContactSuccess,\n  updateContactError,\n} from \"./contacts-actions\";\nimport { logoutSuccess } from \"../auth/auth-actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n  [logoutSuccess]: () => [],\n  [updateContactSuccess]: (state, { payload }) =>\n    state.map((contact) => (contact.id === payload.id ? payload : contact)),\n});\nconst filter = createReducer(\"\", {\n  [updateFilter]: (_, { payload }) => payload,\n});\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\nconst updateLoading = createReducer(false, {\n  [updateContactRequest]: () => true,\n  [updateContactSuccess]: () => false,\n  [updateContactError]: () => false,\n});\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [updateContactError]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n  updateLoading,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"./auth-actions\";\nconst initialUserState = { name: null, email: null };\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserRequest]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [logoutSuccess]: () => false,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport const authReducer = combineReducers({\n  user,\n  token,\n  isAuthenticated,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactsReducer } from \"./contacts/contacts-reducers\";\nimport { authReducer } from \"./auth/auth-reducers\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\nconst authPersistConfig = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"],\n};\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== \"production\",\n});\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","const routes = {\n    home: '/',\n    register: '/register',\n    login: '/login',\n    contacts: '/contacts',\n};\n  \nexport default routes;","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\nconst getUserName = (state) => state.auth.user.name;\nconst getUserEmail = (state) => state.auth.user.email;\n\nexport { getIsAuthenticated, getUserName, getUserEmail };\n","import { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { useSelector } from \"react-redux\";\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selectors\";\nimport s from \"./Navigation.module.css\";\n\nexport default function Navigation() {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <nav>\n      <ul className={s.NavLinksList}>\n        <li>\n          <NavLink exact to={routes.home} className={s.NavLink}></NavLink>\n        </li>\n        <li>\n          <NavLink\n            exact\n            to={routes.home}\n            className={s.NavLink}\n            activeClassName={s[\"NavLink-active\"]}\n          >\n            Home\n          </NavLink>\n        </li>\n        {isAuthenticated && (\n          <li>\n            <NavLink\n              to={routes.contacts}\n              className={s.NavLink}\n              activeClassName={s[\"NavLink-active\"]}\n            >\n              Contacts\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserEmail } from \"../../redux/auth/auth-selectors\";\nimport { logoutUser } from \"../../redux/auth/auth-operations\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport s from \"./UserMenu.module.css\";\n\nconst StyledChip = withStyles({\n  root: {\n    backgroundColor: \"rgb(71, 126, 128)\",\n    color: \"#ffffff\",\n  },\n})(Chip);\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const onLogout = useCallback(() => dispatch(logoutUser()), [dispatch]);\n  const userEmail = useSelector(getUserEmail);\n\n  return (\n    <div className={s.UserMenu}>\n      <StyledChip avatar={<Avatar />} label={userEmail} />\n      <button onClick={onLogout} className={s.logoutbutton}>\n        <ExitToAppIcon />\n      </button>\n    </div>\n  );\n}\n","// React imports\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\n// Imports of routes\nimport routes from \"../../routes\";\nimport s from \"./AuthNav.module.css\";\n\nconst AuthNav = () => {\n  return (\n    <ul className={s.NavLinksList}>\n      <li>\n        <NavLink\n          to={routes.register}\n          className={s.NavLink}\n          activeClassName={s[\"NavLink-active\"]}\n        >\n          Register\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to={routes.login}\n          className={s.NavLink}\n          activeClassName={s[\"NavLink-active\"]}\n        >\n          Login\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default AuthNav;\n","import Navigation from \"../Navigation\";\nimport UserMenu from \"../UserMenu\";\nimport AuthNav from \"../AuthNav\";\nimport { useSelector } from \"react-redux\";\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selectors\";\nimport { AppBar as PhoneBookBar } from \"@material-ui/core\";\nimport s from \"./AppBar.module.css\";\n\nexport default function AppBar() {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <PhoneBookBar position=\"static\">\n      <div className={s.AppBar}>\n        <Navigation />\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\n      </div>\n    </PhoneBookBar>\n  );\n}\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selectors\";\nimport PropTypes from \"prop-types\";\n\nexport default function PrivateRoute({ redirectTo, children, ...routeProps }) {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isAuthenticated ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\nPrivateRoute.propTypes = {\n  redirectTo: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  routeProps: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n  }),\n};\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selectors\";\n\nexport default function PublicRoute({ redirectTo, children, ...routeProps }) {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n\nPublicRoute.defaultProps = {\n  restricted: true,\n};\n","import React, { Suspense, lazy, useEffect } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport AppBar from \"../AppBar\";\nimport Loader from \"react-loader-spinner\";\nimport routes from \"../../routes\";\nimport PrivateRoute from \"../PrivateRoute\";\nimport PublicRoute from \"../PublicRoute\";\nimport { useDispatch } from \"react-redux\";\nimport { getCurrentUser } from \"../../redux/auth/auth-operations\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst LoginPage = lazy(() => import(\"../../views/LoginPage\"));\nconst RegisterPage = lazy(() => import(\"../../views/RegisterPage\"));\nconst ContactsPage = lazy(() => import(\"../../views/ContactsPage\"));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <HashRouter basename=\"/\">\n      <Suspense\n        fallback={\n          <Loader\n            type=\"TailSpin\"\n            color=\"#80cbc4\"\n            height={80}\n            width={80}\n            className=\"loader\"\n          />\n        }\n      >\n        <AppBar />\n        <Switch>\n          <Route exact path={routes.home}></Route>\n\n          <PublicRoute\n            path={routes.register}\n            redirectTo={routes.contacts}\n            restricted\n          >\n            <RegisterPage />\n          </PublicRoute>\n\n          <PublicRoute\n            path={routes.login}\n            redirectTo={routes.contacts}\n            restricted\n          >\n            <LoginPage />\n          </PublicRoute>\n\n          <PrivateRoute path={routes.contacts} redirectTo={routes.login}>\n            <ContactsPage />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </HashRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./components/App/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading=\"Loading...\" persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"Navigation_NavLinksList__22t4o\",\"NavLink\":\"Navigation_NavLink__3gii4\",\"NavLink-active\":\"Navigation_NavLink-active__11abE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"AuthNav_NavLinksList__3G5so\",\"NavLink\":\"AuthNav_NavLink__3nEiw\",\"NavLink-active\":\"AuthNav_NavLink-active__3GXe5\"};","import {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"./auth-actions\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\nconst authToken = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\nconst registerUser = (user) => async (dispatch) => {\n  dispatch(registerRequest());\n  try {\n    const response = await axios.post(\"/users/signup\", user);\n    authToken.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\nconst loginUser = (user) => async (dispatch) => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post(\"/users/login\", user);\n    authToken.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\nconst logoutUser = () => async (dispatch) => {\n  dispatch(logoutRequest());\n  try {\n    await axios.post(\"/users/logout\");\n    authToken.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token },\n  } = getState();\n  if (!token) {\n    return;\n  }\n  authToken.set(token);\n  dispatch(getCurrentUserRequest());\n  try {\n    const response = await axios.get(\"/users/current\");\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nexport { registerUser, loginUser, logoutUser, getCurrentUser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__3Jabz\",\"logoutbutton\":\"UserMenu_logoutbutton__7K5Os\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nexport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__2_q4r\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\nconst addContactError = createAction(\"contacts/addContactError\");\n\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\n\nconst updateContactRequest = createAction(\"contacts/updateContactRequest\");\nconst updateContactSuccess = createAction(\"contacts/updateContactSuccess\");\nconst updateContactError = createAction(\"contacts/updateContactError\");\n\nconst updateFilter = createAction(\"phonebook/updateFilter\");\n\nexport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  updateContactRequest,\n  updateContactSuccess,\n  updateContactError,\n  updateFilter,\n};\n"],"sourceRoot":""}